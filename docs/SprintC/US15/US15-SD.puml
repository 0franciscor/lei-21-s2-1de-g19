@startuml
autonumber
actor "LaboratoryCoordinator" as labC
activate labC

participant ":validateTestUI" as validateTestUI
participant ":validateTestController" as validateTestCont
participant "store:TestStore" as TestStore
participant ":Company" as comp
participant "TestMapper" as TestMapper

labC -> validateTestUI : validate a Test Result/Diagnosis

activate validateTestUI
validateTestUI -> validateTestCont: getAllTestsDto()


activate validateTestCont

validateTestCont -> comp : store = getParameterCategoryStore()
activate comp
deactivate comp


create "testsList: list<Test>" as testsList

validateTestCont --> testsList : create()

validateTestCont -> TestStore : testsList = getAllTests()
activate TestStore
deactivate TestStore

create "testsListDto: list<TestDto>" as testsListDto
validateTestCont --> testsListDto : create()

ref over validateTestCont
validateTestCont -> TestMapper : testsListDto = toDto(testsList)
activate TestMapper
deactivate TestMapper
end ref

deactivate validateTestCont
validateTestUI --> labC : shows a list of to-be validated tests
deactivate validateTestUI

alt
labC -> validateTestUI : selects a test from the list
end alt
activate validateTestUI

validateTestUI --> labC : displays its data (registration date, chemical analysis date, diagnosis date) and request to chose if its valid
deactivate validateTestUI


loop until the user confirms the selected state
labC -> validateTestUI : selects the desired state
activate validateTestUI


validateTestUI --> labC : shows it and requests a confirmation
deactivate validateTestUI

labC -> validateTestUI : confirms the selected state
activate validateTestUI
end

@enduml