@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor "Administrator" as A
activate A


A -> ":SendReportUI" : send the covid-19 report to the NHS
activate ":SendReportUI"
":SendReportUI" --> A: define the date to see the report (dateToSee), the interval of dates, the number of historical day/weeks points (histPoints), \n select between a simple linear and multilinear regression model, independent variables (i.e.: meanAge, dailyNumberTests) and define the significance level
deactivate ":SendReportUI"

A -> ":SendReportUI" : types and selects the requested data
activate ":SendReportUI"
":SendReportUI" -> ":SendReportController": getAllTestWithResultCovidPositive(dateToSee, histPoints)

activate ":SendReportController"
":SendReportController" -> ":Company" : store = getTestStore()
activate ":Company"
deactivate ":Company"

":SendReportController" -> "Utils" : lstDateExceptSundays = getDaysWithoutSyndays(dateToSee, histPoints)
activate "Utils"
deactivate "Utils"

loop for each day of the list
":SendReportController" -> ":store: TestStore" : lstAllTestWithResultCovidPositive = getAllTestWithResultCovidPositive(date)
activate ":store: TestStore"
deactivate ":store: TestStore"

":SendReportController" -> ":store: TestStore" : arrayY = getDailyPerformedTest(date)
activate ":store: TestStore"
deactivate ":store: TestStore"

end

deactivate ":SendReportController"


alt if the user chooses simple linear regression
":SendReportUI" -> ":SendReportController" : SimpleLinearRegression(userIntention)
activate ":SendReportController"

alt if the user chooses daily number tests
":SendReportController" -> ":store: TestStore" : dailyNumberTests = getDailyPositiveTests (lstAllTestWithResultCovidPositive)
activate ":store: TestStore"
deactivate ":store: TestStore"
else or mean age
":SendReportController" -> ":store: TestStore" : meanAge = getMeanAgeFromList (lstAllTestWithResultCovidPositive)
activate ":store: TestStore"
deactivate ":store: TestStore"
end
create ":LinearRegression"
note over ":SendReportController" : arrayX can be dailyNumberTests or meanAge
":SendReportController" --> ":LinearRegression" : create(arrayX, arrayY)
deactivate ":SendReportController"



else the user chooses multilinear regression
":SendReportUI" -> ":SendReportController" : MultilinearRegression()
activate ":SendReportController"



":SendReportController" -> ":store: TestStore" : dailyNumberTests = getDailyPositiveTests (lstAllTestWithResultCovidPositive)
activate ":store: TestStore"
deactivate ":store: TestStore"
":SendReportController" -> ":store: TestStore" : meanAge = getMeanAgeFromList (lstAllTestWithResultCovidPositive)
activate ":store: TestStore"
deactivate ":store: TestStore"

create ":MultilinearRegression"
":SendReportController" --> ":MultilinearRegression" : create(arrayX, arrayY)

deactivate ":SendReportController"
end



":SendReportUI" -> ":SendReportController" : generateNHSReport(numberOfTestWithResultCovidPositive)
activate ":SendReportController"

":SendReportController" -> ":Company" : report = generateNHSReport(numberOfTestWithResultCovidPositive)
activate ":Company"

create "report : NHSReport"
":Company" --> "report : NHSReport" : create(numberOfTestWithResultCovidPositive)

deactivate ":Company"

":SendReportController" -> "report : NHSReport": data = calculateData()
activate "report : NHSReport"
deactivate "report : NHSReport"

":SendReportController" -> "Report2NHS": writeUsingFileWriter (data)

activate "Report2NHS"

deactivate "Report2NHS"

deactivate ":SendReportController"

":SendReportUI" --> A: informs operation success
deactivate ":SendReportUI"



@enduml